version: '3.2'

services:
  db:
    image: postgres
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "${postgres_db}"
      POSTGRES_USER: "${postgres_user}"
      POSTGRES_PASSWORD: "${postgres_password}"
    networks:
      - backend

  app:
    build: ./nextcloud
    restart: always
    volumes:
      - nextcloud:/var/www/html
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: "${postgres_db}"
      POSTGRES_USER: "${postgres_user}"
      POSTGRES_PASSWORD: "${postgres_password}"
      NEXTCLOUD_ADMIN_PASSWORD: "${nextcloud_admin_password}"
      NEXTCLOUD_ADMIN_USER: "${nextcloud_admin_user}"
      NEXTCLOUD_TRUSTED_DOMAINS: "${nextcloud_trusted_domains}"
      TRUSTED_PROXIES: "${trusted_proxies}"
      OBJECTSTORE_S3_HOST: "${s3_url}"
      OBJECTSTORE_S3_BUCKET: "${s3_bucket}"
      OBJECTSTORE_S3_KEY: "${s3_key}"
      OBJECTSTORE_S3_SECRET: "${s3_secret}"
      OBJECTSTORE_S3_PORT: "${s3_port}"
      OBJECTSTORE_S3_SSL: "false"
      OBJECTSTORE_S3_REGION: "{s3_region}"
      OBJECTSTORE_S3_USEPATH_STYLE: "true"
      OBJECTSTORE_S3_AUTOCREATE: "false"
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`${app_url}`)"
      - "traefik.http.routers.nextcloud.tls.certresolver=letsencrypt"
      - "traefik.http.routers.nextcloud.entrypoints=web,websecure"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
    networks:
      - backend

networks:
  backend:

volumes:
  db:
  nextcloud:
